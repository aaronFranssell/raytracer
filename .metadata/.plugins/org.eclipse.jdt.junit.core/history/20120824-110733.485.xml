<?xml version="1.0" encoding="UTF-8"?><testrun name="Test_CSGTree" project="TracerTest" tests="9" started="9" failures="0" errors="1" ignored="0">
  <testsuite name="csg.object.tree.Test_CSGTree" time="0.203">
    <testcase name="setRoot_OperationNullChildren_ExpectException" classname="csg.object.tree.Test_CSGTree" time="0.156"/>
    <testcase name="setRoot_OperationNullRightChild_ExpectException" classname="csg.object.tree.Test_CSGTree" time="0.0"/>
    <testcase name="setRoot_OpWithUnbalancedTree_ExpectNoException" classname="csg.object.tree.Test_CSGTree" time="0.0"/>
    <testcase name="getHitData_WithNoRootSet_ExpectException" classname="csg.object.tree.Test_CSGTree" time="0.016"/>
    <testcase name="setRoot_NullSurface_ExpectNullPointerException" classname="csg.object.tree.Test_CSGTree" time="0.0"/>
    <testcase name="setRoot_OperationNullLeftChild_ExpectException" classname="csg.object.tree.Test_CSGTree" time="0.0"/>
    <testcase name="setRoot_OpWithChildren_ExpectNoException" classname="csg.object.tree.Test_CSGTree" time="0.0"/>
    <testcase name="setRoot_SurfaceWithChildren_ExpectException" classname="csg.object.tree.Test_CSGTree" time="0.0"/>
    <testcase name="getHitData_WithSurfaceInRoot_ExpectSurfaceHitData" classname="csg.object.tree.Test_CSGTree" time="0.031">
      <error>org.mockito.exceptions.misusing.WrongTypeOfReturnValue: 
HitData cannot be returned by sort()
sort() should return double[]
***
If you're unsure why you're getting above error read on.
Due to the nature of the syntax above problem might occur because:
1. This exception *might* occur in wrongly written multi-threaded tests.
   Please refer to Mockito FAQ on limitations of concurrency testing.
2. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - 
   - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method.
&#13;
	at csg.object.tree.Test_CSGTree.getHitData_WithSurfaceInRoot_ExpectSurfaceHitData(Test_CSGTree.java:182)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
